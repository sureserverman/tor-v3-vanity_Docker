# tor-v3-vanity-cuda
# VERSION               0.1.0

#FROM nvidia/cuda:10.2-base as baseimage
#FROM nvidia/cuda:10.1-devel-ubuntu18.04
#FROM gcc:latest
FROM termoshtt/rust-cuda
FROM rustops/crates-build-env

COPY cuda.conf /etc/ld.so.conf.d
RUN ldconfig

# Setup our environment & deps
ADD ./mnt-run.sh ${HOME}/mnt-run.sh
ENV INSTALL_PATH=/root
ARG DEBIAN_FRONTEND=noninteractive
RUN apt-get update && apt-get install --no-install-recommends --no-install-suggests -y curl apt-utils;\
apt-get install -y git s3fs build-essential;\
\
# Install tor-v3-address (CUDA .onion generator) \
git clone https://github.com/dr-bonez/tor-v3-vanity ${INSTALL_PATH}/tor-v3-vanity;\
mkdir  ${INSTALL_PATH}/tor-v3-vanity/mykeys;\
\
# Install rust \
echo "Change is coming...";\
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y;\
. $HOME/.cargo/env;
ENV PATH /root/.cargo/bin:$PATH
RUN cargo install ptx-linker
RUN rustup toolchain add nightly-2020-01-02 \
&& rustup target add nvptx64-nvidia-cuda --toolchain nightly-2020-01-02;\
# curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain nightly -y;\
cd ${INSTALL_PATH}/tor-v3-vanity;\
# export PATH="$HOME/.cargo/bin:$PATH";\
rustup install nightly;\
rustup target add nvptx64-nvidia-cuda;\
cargo install ptx-linker;\
cargo +nightly install --path .

# Set script that will execute when end-user runs container
ENTRYPOINT ["~/mnt-space-run.sh"]
